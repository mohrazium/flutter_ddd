// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
// @dart = 2.12

import 'dart:core';
import 'package:flutter_ddd/args_parser.dart' as prefix1;
import 'package:smart_arg/src/help_argument.dart' as prefix5;
import 'package:smart_arg/src/parser.dart' as prefix3;
import 'package:smart_arg/src/reflector.dart' as prefix0;
import 'package:smart_arg/src/smart_arg.dart' as prefix2;
import 'package:smart_arg/src/string_argument.dart' as prefix4;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Args',
            r'.Args',
            7,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 3, 4, 15],
            const <int>[
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14
            ],
            const <int>[],
            -1,
            {},
            {},
            {r'': (bool b) => () => b ? prefix1.Args() : null},
            -1,
            -1,
            const <int>[-1],
            const <Object>[
              prefix2.SmartArg.reflectable,
              const prefix3.Parser(
                  description:
                      'A CLI for Creating flutter project with clean architecture...')
            ],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r'projectName', 32773, 0,
            const prefix0.Reflector(), -1, -1, -1, null, const <Object>[
          const prefix4.StringArgument(help: '''
      Name of flutter project to create
      example : flutter_project
      must be snake_case name
      ''', isRequired: true, short: 'p')
        ]),
        r.VariableMirrorImpl(r'organization', 32773, 0,
            const prefix0.Reflector(), -1, -1, -1, null, const <Object>[
          const prefix4.StringArgument(help: '''
          Organization for packages of project
          default is : com.mohratech.mohrazium.project_name 
          ''', short: 'o')
        ]),
        r.VariableMirrorImpl(r'projectDir', 32773, 0, const prefix0.Reflector(),
            -1, -1, -1, null, const <Object>[
          const prefix4.StringArgument(help: '''
          Project directory, where is to be create...
          default is : where is this app is ran.
          ''', short: 'd')
        ]),
        r.VariableMirrorImpl(r'features', 2129925, 0, const prefix0.Reflector(),
            -1, -1, -1, null, const <Object>[
          const prefix4.StringArgument(help: '''
          List of features you wish to create in this project...
          default features is : auth, users, dashboard,
          you should separated feature names with ,
          ''', short: 'f')
        ]),
        r.VariableMirrorImpl(r'help', 32773, 0, const prefix0.Reflector(), -1,
            -1, -1, null, const <Object>[const prefix5.HelpArgument()]),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, 5),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 0, 6),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, 7),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 1, 8),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 2, 9),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 2, 10),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 3, 11),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 3, 12),
        r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 4, 13),
        r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 4, 14),
        r.MethodMirrorImpl(r'', 64, 0, -1, -1, -1, null, const <int>[],
            const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'==', 131074, -1, -1, -1, -1, null, const <int>[5],
            const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'toString', 131074, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'noSuchMethod', 65538, -1, -1, -1, -1, null,
            const <int>[6], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'hashCode', 131075, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'runtimeType', 131075, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'parse', 262146, -1, -1, -1, -1, null,
            const <int>[7], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'usage', 131074, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'withEnvironment', 262146, -1, -1, -1, -1, null,
            const <int>[8], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'beforeCommandParse', 262146, -1, -1, -1, -1, null,
            const <int>[9, 10], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'beforeCommandExecute', 262146, -1, -1, -1, -1,
            null, const <int>[11], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'afterCommandExecute', 262146, -1, -1, -1, -1, null,
            const <int>[12], const prefix0.Reflector(), const []),
        r.MethodMirrorImpl(r'extras', 4325379, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'_projectName', 32870, 6,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_organization', 32870, 8,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_projectDir', 32870, 10,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_features', 2130022, 12,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'_help', 32870, 14, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'other', 32774, 16, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'invocation', 32774, 18,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'arguments', 2129926, 21,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'environment', 2129926, 23,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'command', 32774, 24, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'arguments', 2129926, 24,
            const prefix0.Reflector(), -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'command', 32774, 25, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(r'command', 32774, 26, const prefix0.Reflector(),
            -1, -1, -1, null, const [], null, null)
      ],
      <Type>[prefix1.Args],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'parse': (dynamic instance) => instance.parse,
        r'usage': (dynamic instance) => instance.usage,
        r'withEnvironment': (dynamic instance) => instance.withEnvironment,
        r'beforeCommandParse': (dynamic instance) =>
            instance.beforeCommandParse,
        r'beforeCommandExecute': (dynamic instance) =>
            instance.beforeCommandExecute,
        r'afterCommandExecute': (dynamic instance) =>
            instance.afterCommandExecute,
        r'extras': (dynamic instance) => instance.extras,
        r'projectName': (dynamic instance) => instance.projectName,
        r'organization': (dynamic instance) => instance.organization,
        r'projectDir': (dynamic instance) => instance.projectDir,
        r'features': (dynamic instance) => instance.features,
        r'help': (dynamic instance) => instance.help
      },
      {
        r'projectName=': (dynamic instance, value) =>
            instance.projectName = value,
        r'organization=': (dynamic instance, value) =>
            instance.organization = value,
        r'projectDir=': (dynamic instance, value) =>
            instance.projectDir = value,
        r'features=': (dynamic instance, value) => instance.features = value,
        r'help=': (dynamic instance, value) => instance.help = value
      },
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
